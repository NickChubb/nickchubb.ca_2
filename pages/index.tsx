import Head from 'next/head'
import styled from 'styled-components'
import FooterSection from '../src/components/footer'
import NavBar from '../src/components/nav/NavBar'
import React, { useState } from 'react'
import Section from '../src/components/shared/Section'
import { sections } from '../src/components/body/sections'
import { breakpoints } from '../src/components/shared/styles'
import { useRouter } from 'next/router'

const Container = styled.div`
  width: 100vw;
  height: 100vh;
`

const AppWrapper = styled.div`
  min-height: 100%;
  max-width: 75%;
  margin: 0 auto;
  display: flex;
  flex-direction: row;

  @media only screen and (max-width: ${breakpoints.mobile}) {
    max-width: 100%;
  }
`

const MainWrapper = styled.main`
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  gap: 16px;

  @media only screen and (max-width: ${breakpoints.mobile}) {
    padding: 0 2rem;
  }
`

const Home = () => {
  const { asPath } = useRouter()
  const currentSection = asPath.substring(2)
  const [section, setSection] = useState(currentSection ?? 'bio')

  const renderSubsection = () => {}

  const renderSections = () => {
    return sections.map((section, key) => {
      const content = section.Content
      if (Array.isArray(content)) {
        return content.map((subsection) => (
          <Section
            key={key}
            //@ts-ignore
            Component={subsection.Content}
            title={subsection.title}
            setSection={setSection}
            center={section.center ?? false}
          />
        ))
      } else {
        return (
          <Section
            key={key}
            //@ts-ignore
            Component={section.Content}
            title={section.title}
            setSection={setSection}
            center={section.center ?? false}
          />
        )
      }
    })
  }

  return (
    <Container>
      <Head>
        <title>Nick Chubb</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppWrapper>
        <NavBar section={section} setSection={setSection}/>
        <MainWrapper id="main">
          {/* <ProjectsSection setVisible={setVisible} /> */}
          {renderSections()}
          <FooterSection />
        </MainWrapper>
      </AppWrapper>
    </Container>
  )
}

export default Home
